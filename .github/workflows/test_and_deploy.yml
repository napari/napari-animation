# This workflows will upload a Python Package using Trusted Publishing when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: tests

on:
  push:
    branches:
      - main
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  code:
    name: Code
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        task: [black, ruff]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install tox
      - name: Run task
        run: tox -e ${{ matrix.task }}
  test:
    name: ${{ matrix.platform }} py${{ matrix.python-version }} ${{ matrix.qt_package }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ "3.10", "3.11", "3.12", "3.13" ]
        qt_package: [ pyqt ]
        include:
          # Add PySide2 only for Python 3.10 on Linux and Windows
          - platform: ubuntu-latest
            python-version: "3.10"
            qt_package: pyside
          - platform: windows-latest
            python-version: "3.10"
            qt_package: pyside

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: tlambert03/setup-qt-libs@v1

      # strategy borrowed from vispy for installing opengl libs on windows
      - name: Install Windows OpenGL
        if: runner.os == 'Windows'
        run: |
          git clone --depth 1 https://github.com/pyvista/gl-ci-helpers.git
          powershell gl-ci-helpers/appveyor/install_opengl.ps1
          if (Test-Path -Path "C:\Windows\system32\opengl32.dll" -PathType Leaf) {Exit 0} else {Exit 1}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools tox tox-gh-actions

      # this runs the platform-specific tests declared in tox.ini
      - name: Test with tox
        uses: aganders3/headless-gui@v2
        with:
            run: tox
        env:
          PLATFORM: ${{ matrix.platform }}
          TOX_TESTENV_PASSENV: "QT_PACKAGE"
          QT_PACKAGE: ${{ matrix.qt_package }}

      - name: Coverage
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  deploy:
    # this will run when you have tagged a commit, starting with "v*"
    # and requires that you have setup PyPI Trusted Publishing
    # (see https://docs.pypi.org/trusted-publishers/adding-a-publisher/)
    needs: [ test ]
    runs-on: ubuntu-latest
    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write
    environment:
      name: pypi
      url: https://pypi.org/project/napari-animation
    if: contains(github.ref, 'tags')
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build setuptools setuptools_scm
      - name: Build python package
        run: |
          git tag
          python -m build
      - name: Publish package distributions to PyPI
        # This action uploads everything from the dist/ folder to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
